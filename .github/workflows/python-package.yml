# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FFMPEG_VERSION: "8.0"

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Cache ffmpeg download
      uses: actions/cache@v4
      id: cache-ffmpeg
      with:
        path: /opt/ffmpeg/ffmpeg-n${{ env.FFMPEG_VERSION }}-latest-linux64-gpl-${{ env.FFMPEG_VERSION }}.tar.xz
        key: ${{ runner.os }}-ffmpeg-${{ env.FFMPEG_VERSION }}
    - name: Download ffmpeg if not cached
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      run: |
        echo "Downloading ffmpeg ${FFMPEG_VERSION}"
        sudo mkdir -p /opt/ffmpeg
        wget -q https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n${{ env.FFMPEG_VERSION }}-latest-linux64-gpl-${{ env.FFMPEG_VERSION }}.tar.xz -P /opt/ffmpeg
    - name: Extract and install ffmpeg
      run: |
        echo "Extracting ffmpeg ${FFMPEG_VERSION}"
        sudo mkdir -p /opt/ffmpeg/extracted
        sudo tar --strip-components 1 -xf /opt/ffmpeg/ffmpeg-n${{ env.FFMPEG_VERSION }}-latest-linux64-gpl-${{ env.FFMPEG_VERSION }}.tar.xz -C /opt/ffmpeg/extracted
        echo "Installing ffmpeg ${FFMPEG_VERSION}"
        sudo cp /opt/ffmpeg/extracted/bin/ffmpeg /usr/bin/ffmpeg
    - name: Install ffmpeg libs
      run: |
        sudo apt-get install libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libavfilter-dev libswscale-dev
    - name: Install dependencies
      run: |
        uv sync --all-groups
    - name: Generate test sequences
      run: |
        cd test && ./generate_ffmpeg_sources.sh && cd -
    - name: Lint with ruff
      run: |
        uv run ruff check src/
    - name: Check formatting with ruff
      run: |
        uv run ruff format --check src/
    - name: Test with pytest
      run: |
        uv run pytest test/test.py
